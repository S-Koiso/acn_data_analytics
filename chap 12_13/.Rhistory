#install.packages("osmar", repos = "http://cran.us.r-project.org")
#install.packages("igraph", repos = "http://cran.us.r-project.org")
library(osmar)
library(igraph)
knitr::opts_chunk$set(echo = TRUE)
setwd(dirname(getActiveDocumentContext()$path))
knitr::opts_chunk$set(echo = TRUE)
if (TRUE) {
list.of.packages <- c("tidyverse", "haven", "here", "kableExtra","rstudioapi","DescTools","qwraps2","data.table","stargazer","readxl","dplyr","rootSolve","ggdag","SuperLearner","Metrics","ggplot2","readr","nnet","sandwich","lmtest","broom","sandwich","lmtest","assertr",'lavaan','semPlot',"makedummies","dagitty","gridExtra","patchwork")
new.packages <- list.of.packages[
!( list.of.packages %in% installed.packages()[,"Package"] )
]
if(length(new.packages)) install.packages(new.packages,
repos = "https://cloud.r-project.org")
lapply(list.of.packages, library, character.only = TRUE)
}
setwd(dirname(getActiveDocumentContext()$path))
if (TRUE) {
list.of.packages <- c("tidyverse", "haven", "here", "kableExtra","rstudioapi","DescTools","qwraps2","data.table","stargazer","readxl","dplyr","rootSolve","ggdag","SuperLearner","Metrics","ggplot2","readr","nnet","sandwich","lmtest","broom","sandwich","lmtest","assertr",'lavaan','semPlot',"makedummies","dagitty","gridExtra","patchwork")
new.packages <- list.of.packages[
!( list.of.packages %in% installed.packages()[,"Package"] )
]
if(length(new.packages)) install.packages(new.packages,
repos = "https://cloud.r-project.org")
lapply(list.of.packages, library, character.only = TRUE)
}
library(osmar)
library(igraph)
cb <- center_bbox(139.7069, 35.6671, 500, 500) # long, lat, north&south (m), west&east(m)
map <- get_osm(cb, source = osmsource_api())
map <- get_osm(cb, source=osmsource_api())
map <- get_osm(cb, source=osmsource_api(url = "https://api.openstreetmap.org/api/0.6/"))
map <- get_osm(cb)
map <- get_osm(cb, source = osmsource_api())
#install.packages("osmar", repos = "http://cran.us.r-project.org")
#install.packages("igraph", repos = "http://cran.us.r-project.org")
install.packages("OpenStreetMap", repos = "http://cran.us.r-project.org")
library(OpenStreetMap)
openmap(c(35,139),
c(35.5,140))
library(OpenStreetMap)
openmap(c(35,139),c(35.5,140))
OpenStreetMap::openmap(c(35,139),c(35.5,140))
library(OpenStreetMap)
map <- get_osm(cb, source = osmsource_api())
lat1 <- -34.5; lat2 <- -33.5; lon1 <- 18; lon2 <- 19
library(OpenStreetMap)
# other 'type' options are "osm", "maptoolkit-topo", "bing", "stamen-toner",
# "stamen-watercolor", "esri", "esri-topo", "nps", "apple-iphoto", "skobbler";
# play around with 'zoom' to see what happens; 10 seems just right to me
sa_map <- openmap(c(lat2, lon1), c(lat1, lon2), zoom = 10,
type = "esri-topo", mergeTiles = TRUE)
lat1 <- -34.5; lat2 <- -33.5; lon1 <- 18; lon2 <- 19
library(OpenStreetMap)
# other 'type' options are "osm", "maptoolkit-topo", "bing", "stamen-toner",
# "stamen-watercolor", "esri", "esri-topo", "nps", "apple-iphoto", "skobbler";
# play around with 'zoom' to see what happens; 10 seems just right to me
sa_map <- OpenStreetMap::openmap(c(lat2, lon1), c(lat1, lon2), zoom = 10,
type = "esri-topo", mergeTiles = TRUE)
#install.packages("osmar", repos = "http://cran.us.r-project.org")
#install.packages("igraph", repos = "http://cran.us.r-project.org")
#install.packages("OpenStreetMap", repos = "http://cran.us.r-project.org")
install.packages("osmdata")
library(osmdata)
get_osm(center_bbox(20.41,44.82, 5000, 5000),all=True)
src <- osmsource_osmosis(file = "~/map.osm")
cb <- center_bbox(139.7069, 35.6671, 500, 500) # long, lat, north&south (m), west&east(m)
map <- get_osm(cb,source = src)
map <- get_osm(cb,rc)
map <- get_osm(cb,src)
src <- osmsource_osmosis(file = "./map.osm")
map <- get_osm(cb,src)
map <- get_osm(cb,osmsource_osmosis(file = "./map.osm"))
setwd(dirname(getActiveDocumentContext()$path))
src <- osmsource_osmosis(file = "./map.osm")
cb <- center_bbox(139.7069, 35.6671, 500, 500) # long, lat, north&south (m), west&east(m)
map <- get_osm(cb,osmsource_osmosis(file = "./map.osm"))
src <- osmsource_osmosis(file = "map.osm")
map <- get_osm(cb,src)
src
map <- get_osm(cb,"map.osm")
map <- get_osm(cb,"./map.osm")
map <- get_osm(cb,source = "./map.osm")
getwd()
map <- get_osm(cb,source = "~/map.osm")
map <- get_osm(cb,source = get_overpass_url("https://overpass-api.de/api/map?bbox=139.7006,35.6612,139.7195,35.6719"))
get_overpass_url()
src <- osmsource_osmosis(file = "map")
get_overpass_url()
src
src$file
plot_nodes(src$file)
get_osm(src$file)
map <- get_osm(cb,source = osmsource_api())
map <- get_osm(cb,source = osmsource_api(url = "https://overpass-api.de/api/map"))
map <- get_osm(cb,source = osmsource_api(url = "https://overpass-api.de/api"))
map <- get_osm(cb,source = osmsource_api(url = "https://overpass-api.de"))
map <- get_osm(cb,source = osmsource_api(url = "https://lz4.overpass-api.de/api/interpreter"))
map <- get_osm(cb,source = osmsource_api(url = "https://api.openstreetmap.org/api/0.6/"))
map <- get_osm(cb,source = osmsource_api(url = "https://api.openstreetmap.org/api/0.6/", sslversion=5L))
opq(bbox = c(-0.12, 51.51, -0.11, 51.52))
q <- opq(bbox = c(-0.12, 51.51, -0.11, 51.52))
q <- opq(bbox = c(35.6612, 139.7006, 35.6719, 139.7195))
osmdata_xml(q, 'map.osm')
q <- opq(bbox = c(139.7006, 35.6612, 139.7195, 35.6719))
osmdata_xml(q, 'map.osm')
q <- opq(bbox = c(139.7006, 35.6612, 139.7195, 35.6719))
map <- osmdata_xml(q, 'map.osm')
plot_nodes(map)
map <- osmdata_sp(q)
plot(map)
if (TRUE) {
list.of.packages <- c("tidyverse", "haven", "here", "kableExtra","rstudioapi","DescTools","qwraps2","data.table","stargazer","readxl","dplyr","rootSolve","ggdag","SuperLearner","Metrics","ggplot2","readr","nnet","sandwich","lmtest","broom","sandwich","lmtest","assertr",'lavaan','semPlot',"makedummies","dagitty","gridExtra","patchwork")
new.packages <- list.of.packages[
!( list.of.packages %in% installed.packages()[,"Package"] )
]
if(length(new.packages)) install.packages(new.packages,
repos = "https://cloud.r-project.org")
lapply(list.of.packages, library, character.only = TRUE)
}
setwd(dirname(getActiveDocumentContext()$path))
knitr::opts_chunk$set(echo = TRUE)
setwd(dirname(getActiveDocumentContext()$path))
install.packages("recommenderlab", repos = "http://cran.us.r-project.org")
library(recommenderlab)
data("MovieLense")
MovieLense
# convert into dataframe
head(as.data.frame(MovieLense))
# convert into dataframe
head(as(MovieLense, "data.frame"))
# convert into matrix
as(MovieLense, "matrix")
# convert into matrix
as(MovieLense, "matrix")[501:505, 1:5]
image(MovieLense, main="Raw Ratings")
# Number of Rating by user
rowCounts(MovieLense)
summary(rowCounts(MovieLense))
# Ave. Rating Score by user
rowMeans(MovieLense)
summary(rowMeans(MovieLense))
hist(rowMeans(MovieLense))
normalize(MovieLense, method = "center")
rowMeans(normalize(MovieLense, method = "center"))
summary(rowMeans(normalize(MovieLense, method = "center")))
# summary
recommenderRegistry$get_entries(dataType = "realRatingMatrix")
# summary
recommenderRegistry$get_entries(dataType="realRatingMatrix")
# summary
recommenderRegistry$get_entries(dataType='realRatingMatrix')
# summary
recommenderRegistry$get_entries(dataType='realRatingMatrix')
recommenderRegistry$get_entries(dataType='binaryRatingMatrix')
# with the first 500 data
r <- Recommender(MovieLense[1:500], method ="UBCF")
# predict rating of #501-505 users
p <- predict(r, MovieLense[501:505], type = "ratings")
# display the predicted ratings of the first 5 movies
as(p, "matrix")[1:5,1:5]
# Split method
e <- evaluationScheme(MovieLense, method = "split", train = 0.9, given = 15)
# UBCF recommender with training data
r.ubcf <- Recommender(getData(e, "train"), method = "UBCF")
# IBCF recommender with training data
r.ibcf <- Recommender(getData(e, "train"), method = "IBCF")
# Predict with test data and UBCF recommender
p.ubcf <- predict(r.ubcf, getData(e, "known"), type = "ratings")
# Predict with test data and IBCF recommender
p.ibcf <- predict(r.ibcf, getData(e, "known"), type = "ratings")
e <- rbind(calcPredictionAccuracy(p.ubcf, getData(e,"unknown")),
calcPredictionAccuracy(p.ibcf, getData(e,"unknown")))
rownames(e) <- c("UBCF","IBCF")
e
help(package="recommenderlab")
if (TRUE) {
list.of.packages <- c("tidyverse", "haven", "here", "kableExtra","rstudioapi","DescTools","qwraps2","data.table","stargazer","readxl","dplyr","rootSolve","ggdag","SuperLearner","Metrics","ggplot2","readr","nnet","sandwich","lmtest","broom","sandwich","lmtest","assertr",'lavaan','semPlot',"makedummies","dagitty","gridExtra","patchwork")
new.packages <- list.of.packages[
!( list.of.packages %in% installed.packages()[,"Package"] )
]
if(length(new.packages)) install.packages(new.packages,
repos = "https://cloud.r-project.org")
lapply(list.of.packages, library, character.only = TRUE)
}
setwd(dirname(getActiveDocumentContext()$path))
knitr::opts_chunk$set(echo = TRUE)
install.packages("h2o")
library(h2o)
# turn on h2o
localH2O = h2o.init(nthreads = -1, max_mem_size = "2g")
# turn on h2o
localH2O = h2o.init(nthreads = -1, max_mem_size = "2g")
# turn on h2o
localH2O = h2o.init(nthreads = -1, max_mem_size = "2g")
q <- opq(bbox = c(139.7006, 35.6612, 139.7195, 35.6719))
map <- osmdata_xml(q, 'map.osm')
map <- osmdata_sp(q)
src <- osmsource_osmosis(file = "map")
if (TRUE) {
list.of.packages <- c("tidyverse", "haven", "here", "kableExtra","rstudioapi","DescTools","qwraps2","data.table","stargazer","readxl","dplyr","rootSolve","ggdag","SuperLearner","Metrics","ggplot2","readr","nnet","sandwich","lmtest","broom","sandwich","lmtest","assertr",'lavaan','semPlot',"makedummies","dagitty","gridExtra","patchwork")
new.packages <- list.of.packages[
!( list.of.packages %in% installed.packages()[,"Package"] )
]
if(length(new.packages)) install.packages(new.packages,
repos = "https://cloud.r-project.org")
lapply(list.of.packages, library, character.only = TRUE)
}
setwd(dirname(getActiveDocumentContext()$path))
knitr::opts_chunk$set(echo = TRUE)
#install.packages("osmar", repos = "http://cran.us.r-project.org")
#install.packages("igraph", repos = "http://cran.us.r-project.org")
#install.packages("OpenStreetMap", repos = "http://cran.us.r-project.org")
install.packages("osmdata")
install.packages("osmdata")
library(osmar)
library(igraph)
library(osmdata)
src <- osmsource_osmosis(file = "map.osm")
cb <- center_bbox(139.7069, 35.6671, 500, 500) # long, lat, north&south (m), west&east(m)
map <- get_osm(cb,source = osmsource_api(url = "https://api.openstreetmap.org/api/0.6/"))#error
q <- opq(bbox = c(139.7006, 35.6612, 139.7195, 35.6719))
map <- osmdata_xml(q, 'map.osm')
map <- osmdata_sp(q)
map
plot(map)
map <- osmdata_sf(q)
map
map$osm_points
map$osm_polygons
map$osm_lines
which(map$osm_polygons==517470381)
which(map$osm_points==517470381)
